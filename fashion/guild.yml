- package: fashion

- model: fashion
  description: Basic fashion MNIST image classifier.
  references:
    - https://www.tensorflow.org/tutorials/keras/basic_classification
  operations:
    prepare-data:
      description: Prepare images for training.
      main: prepare_data --output-dir .
    train:
      description: Train classifier from scratch.
      main: train --data-dir data --log-dir . --checkpoint-dir .
      requires: prepared-data
      label-template: epochs=${epochs} lr=${learning-rate}
      flags:
        epochs:
          description: Number of epochs to train
          default: 5
        learning-rate:
          description: Learning rate
          default: 0.001
    predict:
      description: Use trained model to make predictions.
      main: predict --data-dir data --checkpoint-dir model --output-dir .
      requires:
        - prepared-data
        - trained-model
      label-template: model=${trained-model}
      flags:
        count:
          description: Number of images to predict
          null-label: 5 or ignored if range is used
        range:
          description: Range of images to predict
          null-label: unspecified
        errors-only:
          description: Only show incorrect predictions
          default: no
          arg-switch: yes
        checkpoint-epoch:
          description: Checkpoint epoch used for predictions
          null-label: latest
  resources:
    prepared-data:
      description: Preprocesed images using prepare-data.
      path: data
      sources:
        - operation: prepare-data
          select: .+\.npy
    trained-model:
      description: Trained model using train.
      path: model
      sources:
        - operation: train
          select: weights-.+\.hdf5

- test: fashion
  steps:
    - run-op: prepare-data
      expect:
        - file: sample-*.png
        - file: test-images.npy
        - file: test-labels.npy
        - file: train-images.npy
        - file: train-labels.npy
    - run-op: train
      flags:
        epochs: 1
      expect:
        - file: events.out.tfevents.*
        - file: weights-0001-*.hdf5
    - run-op: predict
      expect:
        - file: '*.png'
    - run-op: predict
      flags:
        errors-only: yes
      expect:
        - file: '*-error.png'
